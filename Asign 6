<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Image Gallery with Filters</title>
    <link rel="stylesheet" href="styles.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script defer src="https://unpkg.com/masonry-layout@4/dist/masonry.pkgd.min.js"></script>
    <script defer src="script.js"></script>
</head>
<body>
    <h1>Image Gallery with Filters (Masonry)</h1>
    
    <div class="buttons">
        <button class="filter-btn" data-filter="all">All</button>
        <button class="filter-btn" data-filter="nature">Nature</button>
        <button class="filter-btn" data-filter="animals">Animals</button>
        <button class="filter-btn" data-filter="architecture">Architecture</button>
    </div>

    <div class="gallery">
        <div class="grid-item nature"><img src="images/nature1.jpg" alt="Nature 1"></div>
        <div class="grid-item nature"><img src="images/nature2.jpg" alt="Nature 2"></div>
        <div class="grid-item animals"><img src="images/animals1.jpg" alt="Animals 1"></div>
        <div class="grid-item animals"><img src="images/animals2.jpg" alt="Animals 2"></div>
        <div class="grid-item architecture"><img src="images/architecture1.jpg" alt="Architecture 1"></div>
        <div class="grid-item architecture"><img src="images/architecture2.jpg" alt="Architecture 2"></div>
    </div>
</body>
</html>


body {
    font-family: Arial, sans-serif;
    text-align: center;
    background-color: #f4f4f4;
}

.buttons {
    margin: 20px 0;
}

button {
    padding: 10px 20px;
    margin: 5px;
    border: none;
    cursor: pointer;
    background-color: #007BFF;
    color: white;
    border-radius: 5px;
}

button:hover {
    background-color: #0056b3;
}

.gallery {
    width: 80%;
    margin: 0 auto;
    display: flex;
    flex-wrap: wrap;
}

.grid-item {
    width: calc(33.333% - 10px);
    margin-bottom: 10px;
    opacity: 1;
    transition: opacity 0.3s ease-in-out;
}

.grid-item img {
    width: 100%;
    border-radius: 5px;
}

.hidden {
    opacity: 0;
    display: none;
}



$(document).ready(function() {
    var $grid = $('.gallery').masonry({
        itemSelector: '.grid-item',
        columnWidth: '.grid-item',
        percentPosition: true
    });

    $(".filter-btn").click(function() {
        let filter = $(this).attr("data-filter");

        if (filter === "all") {
            $(".grid-item").removeClass("hidden").fadeIn();
        } else {
            $(".grid-item").each(function() {
                if ($(this).hasClass(filter)) {
                    $(this).removeClass("hidden").fadeIn();
                } else {
                    $(this).addClass("hidden").fadeOut();
                }
            });
        }

        $grid.masonry('layout'); // Refresh Masonry layout
    });
});


<script>
    $(document).ready(function () {
        let selectedModifiers = [];

        // Get preselected values from hidden field
        let preselectedValues = $("#selectedModifierGroups").val();
        if (preselectedValues) {
            selectedModifiers = preselectedValues.split(",");
        }

        // Pre-select checkboxes and update button text in edit mode
        $(".modifier-checkbox").each(function () {
            if (selectedModifiers.includes($(this).val())) {
                $(this).prop("checked", true);
            }
        });

        // Update button text based on selected values
        $("#modifierDropdown").text(selectedModifiers.length > 0 
            ? selectedModifiers.length + " Selected" 
            : "Select Modifier Group(s)");

        // Update hidden input field when checkboxes change
        $(".modifier-checkbox").change(function () {
            let value = $(this).val();
            if ($(this).is(":checked")) {
                if (!selectedModifiers.includes(value)) {
                    selectedModifiers.push(value);
                }
            } else {
                selectedModifiers = selectedModifiers.filter(item => item !== value);
            }

            // Update the hidden input with selected values
            $("#selectedModifierGroups").val(selectedModifiers.join(","));

            // Update dropdown button text
            $("#modifierDropdown").text(selectedModifiers.length > 0 
                ? selectedModifiers.length + " Selected" 
                : "Select Modifier Group(s)");
        });

        // Ensure the hidden input field is updated before form submission
        $("#modifierItemForm").submit(function () {
            $("#selectedModifierGroups").val(selectedModifiers.join(","));
        });
    });
</script>
